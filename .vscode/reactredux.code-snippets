{
	// Place your bpmhufront workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Reducer default" : {
		"prefix": "reducer",
		"body": [
			"change${1/(.*)/${1:/pascalcase}/}: ",
			"(state, action) => {",
			"    state.${1/(.*)/${1:/camelcase}/} = action.payload; ",
			"},"
		]
	},

	"Selector default" : {
		"prefix": "selector",
		"body": [
			"export const select${1/(.*)/${1:/pascalcase}/} = (state) => state.modeler.${1/(.*)/${1:/camelcase}/};"
		]
	},
	"Use Selector default" : {
		"prefix": "useselector",
		"body": [
			"const ${1/(.*)/${1:/camelcase}/} = useSelector(select${1/(.*)/${1:/pascalcase}/});"
		]
	}
}